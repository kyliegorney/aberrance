// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_GBT
double compute_GBT(const std::vector<int>& s, const std::vector<double>& p);
RcppExport SEXP _aberrance_compute_GBT(SEXP sSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<int>& >::type s(sSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_GBT(s, p));
    return rcpp_result_gen;
END_RCPP
}
// compute_M4
double compute_M4(const std::vector<int>& s_1, const std::vector<int>& s_0, const std::vector<double>& p_1, const std::vector<double>& p_0, const std::vector<double>& p_n);
RcppExport SEXP _aberrance_compute_M4(SEXP s_1SEXP, SEXP s_0SEXP, SEXP p_1SEXP, SEXP p_0SEXP, SEXP p_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<int>& >::type s_1(s_1SEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type s_0(s_0SEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type p_1(p_1SEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type p_0(p_0SEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type p_n(p_nSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_M4(s_1, s_0, p_1, p_0, p_n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_aberrance_compute_GBT", (DL_FUNC) &_aberrance_compute_GBT, 2},
    {"_aberrance_compute_M4", (DL_FUNC) &_aberrance_compute_M4, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_aberrance(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
